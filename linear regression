# 1. Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# 2. Create a sample dataset (replace with real dataset if available)
data = {
    'square_feet': [1500, 1800, 2400, 3000, 3500, 4000, 4500, 5000],
    'bedrooms': [3, 3, 4, 4, 5, 5, 6, 6],
    'bathrooms': [2, 2, 3, 3, 4, 4, 5, 5],
    'price': [300000, 350000, 400000, 480000, 550000, 600000, 680000, 750000]
}

df = pd.DataFrame(data)

# 3. Select features (X) and target (y)
X = df[['square_feet', 'bedrooms', 'bathrooms']]
y = df['price']

# 4. Split dataset into train & test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 6. Evaluate model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("RÂ² Score:", r2)

# 7. Visualize actual vs predicted prices
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red')  # reference line
plt.show()

# 8. Predict price for a new house
new_house = [[3200, 4, 3]]
predicted_price = model.predict(new_house)
print("Predicted Price for 3200 sqft, 4BHK, 3Baths:", predicted_price[0])
